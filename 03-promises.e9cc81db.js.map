{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,uBAAwCE,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAEpDM,EAAK,sBAAqCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,UA9B3CQ,SAASC,cAAc,SAsB/BC,iBAAiB,UApBtB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAeF,EAAMG,cAAcC,SACnCC,EAAaC,OAAOJ,EAAab,MAAMkB,OACvCC,EAAYF,OAAOJ,EAAaO,KAAKF,OACrCG,EAAcJ,OAAOJ,EAAaS,OAAOJ,OAE1B,GAAfG,GAAoBA,EAAc,GAAKF,EAAY,GAAKH,EAAa,EACvEO,EAAA3B,GAAS4B,OAAOC,QAAQ,gCAItBN,EAAY,GAAKH,EAAa,EAChCO,EAAA3B,GAAS4B,OAAOC,QAAQ,+BAoB5B,SAA2BT,EAAYG,EAAWE,GAChD,IAAIK,EAAQ,EACE,IAAVA,GAAeL,EAAc,GAC/BM,YAAW,WACT,IAAIC,EAAWF,GAAS,EACxB5B,EAAc4B,EAAOV,GAClBa,MAAK,SAAAxB,GACJyB,QAAQC,IAAI1B,GACZkB,EAAA3B,GAAS4B,OAAOQ,QAAQ3B,MAEzB4B,OAAM,SAAA3B,GACLwB,QAAQC,IAAIzB,GACZiB,EAAA3B,GAAS4B,OAAOC,QAAQnB,MAE5B4B,EAAoBN,KACnBZ,GAEL,SAASkB,EAAoBN,GAC3B,GAAIA,GAAW,GAAKP,GAAe,EACjC,IAAMc,EAAUC,aAAY,WAG1BtC,EADA4B,GAAS,EADTV,GAAcG,GAGXU,MAAK,SAAAxB,GACJyB,QAAQC,IAAI1B,GACZkB,EAAA3B,GAAS4B,OAAOQ,QAAQ3B,MAEzB4B,OAAM,SAAA3B,GACLwB,QAAQC,IAAIzB,GACZiB,EAAA3B,GAAS4B,OAAOC,QAAQnB,MAExBoB,GAASL,GACXgB,cAAcF,KAEfhB,IAlDPmB,CAAkBtB,EAAYG,EAAWE,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nfunction readingInput(event) {\n  event.preventDefault();\n  let formElements = event.currentTarget.elements;\n  let delayInput = Number(formElements.delay.value);\n  let stepInput = Number(formElements.step.value);\n  let amountInput = Number(formElements.amount.value);\n\n  if (amountInput == 0 || amountInput < 0 || stepInput < 0 || delayInput < 0) {\n    Notiflix.Notify.failure('❌ Amount must be more then 0');\n    return;\n  }\n\n  if (stepInput < 0 || delayInput < 0) {\n    Notiflix.Notify.failure('❌ Value must be more then 0');\n    return;\n  }\n\n  CallCreatePromise(delayInput, stepInput, amountInput);\n}\n\nform.addEventListener('submit', readingInput);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n\nfunction CallCreatePromise(delayInput, stepInput, amountInput) {\n  let total = 0;\n  if (total === 0 && amountInput > 0) {\n    setTimeout(() => {\n      let caunter = (total += 1);\n      createPromise(total, delayInput)\n        .then(resolve => {\n          console.log(resolve);\n          Notiflix.Notify.success(resolve);\n        })\n        .catch(reject => {\n          console.log(reject);\n          Notiflix.Notify.failure(reject);\n        });\n      SecondCreatePromise(caunter);\n    }, delayInput);\n  }\n  function SecondCreatePromise(caunter) {\n    if (caunter >= 1 && amountInput >= 2) {\n      const timerid = setInterval(() => {\n        delayInput += stepInput;\n        total += 1;\n        createPromise(total, delayInput)\n          .then(resolve => {\n            console.log(resolve);\n            Notiflix.Notify.success(resolve);\n          })\n          .catch(reject => {\n            console.log(reject);\n            Notiflix.Notify.failure(reject);\n          });\n        if (total >= amountInput) {\n          clearInterval(timerid);\n        }\n      }, stepInput);\n    }\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","concat","document","querySelector","addEventListener","event","preventDefault","formElements","currentTarget","elements","delayInput","Number","value","stepInput","step","amountInput","amount","$parcel$interopDefault","Notify","failure","total","setTimeout","caunter","then","console","log","success","catch","SecondCreatePromise","timerid","setInterval","clearInterval","$ce04d3a99e08e73b$var$CallCreatePromise"],"version":3,"file":"03-promises.e9cc81db.js.map"}